$date
	Sat Oct 25 18:10:22 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_cpu $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$scope module mycpu $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 1 # reg_write $end
$var wire 5 $ reg_d [4:0] $end
$var wire 5 % reg_b [4:0] $end
$var wire 5 & reg_a [4:0] $end
$var wire 32 ' program_counter [31:0] $end
$var wire 1 ( panic $end
$var wire 4 ) opcode [3:0] $end
$var wire 13 * offset [12:0] $end
$var wire 32 + memory_data [31:0] $end
$var wire 1 , mem_write_word $end
$var wire 1 - mem_read_word $end
$var wire 1 . jump $end
$var wire 32 / instruction [31:0] $end
$var wire 32 0 data_register_d [31:0] $end
$var wire 32 1 data_register_b [31:0] $end
$var wire 32 2 data_register_a [31:0] $end
$var wire 4 3 branch_type_operation [3:0] $end
$var wire 1 4 branch $end
$var wire 4 5 alu_type [3:0] $end
$var wire 32 6 alu_output [31:0] $end
$var wire 1 7 alu_operation_write_register $end
$var reg 32 8 adress_data [31:0] $end
$var reg 32 9 new_register_data [31:0] $end
$scope module alu $end
$var wire 32 : reg_b [31:0] $end
$var wire 32 ; reg_a [31:0] $end
$var wire 4 < alu_ctrl [3:0] $end
$var reg 32 = result_value [31:0] $end
$upscope $end
$scope module branch_comp $end
$var wire 32 > data_register_b [31:0] $end
$var wire 32 ? data_register_a [31:0] $end
$var wire 4 @ branch_operation [3:0] $end
$var reg 1 4 branch $end
$upscope $end
$scope module control $end
$var wire 1 4 branch $end
$var wire 1 # write_register $end
$var wire 1 , store_word_memory $end
$var wire 4 A opcode [3:0] $end
$var wire 1 - load_word_memory $end
$var wire 1 . jump $end
$var wire 1 B branch_gt $end
$var wire 1 C branch_ge $end
$var wire 1 D branch_eq $end
$var wire 1 7 alu_operation $end
$var reg 4 E alu_operation_type [3:0] $end
$var reg 4 F branch_operation_type [3:0] $end
$var reg 1 ( panic $end
$upscope $end
$scope module decoder $end
$var wire 5 G reg_d [4:0] $end
$var wire 5 H reg_b [4:0] $end
$var wire 5 I reg_a [4:0] $end
$var wire 4 J opcode [3:0] $end
$var wire 13 K offset [12:0] $end
$var wire 32 L instruction [31:0] $end
$upscope $end
$scope module mem_data $end
$var wire 32 M address [31:0] $end
$var wire 1 ! clk $end
$var wire 32 N data_memory_out [31:0] $end
$var wire 1 , store_instruction $end
$var wire 32 O data_memory_in [31:0] $end
$upscope $end
$scope module memory_ins $end
$var wire 32 P instruction_out [31:0] $end
$var wire 32 Q program_counter [31:0] $end
$upscope $end
$scope module pc $end
$var wire 1 4 branch $end
$var wire 13 R branch_target [12:0] $end
$var wire 1 ! clk $end
$var wire 1 . jump $end
$var wire 1 ( panic $end
$var wire 32 S pc_out [31:0] $end
$var wire 1 " reset $end
$var wire 32 T jump_target [31:0] $end
$var reg 32 U PC_reg [31:0] $end
$upscope $end
$scope module register_table $end
$var wire 1 ! clk $end
$var wire 32 V data_register_a [31:0] $end
$var wire 32 W data_register_b [31:0] $end
$var wire 32 X data_register_d_in [31:0] $end
$var wire 32 Y data_register_d_out [31:0] $end
$var wire 5 Z register_a [4:0] $end
$var wire 5 [ register_b [4:0] $end
$var wire 5 \ register_d [4:0] $end
$var wire 1 ] reset $end
$var wire 1 # write_register_d $end
$var integer 32 ^ i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module tb_cpu $end
$scope module mycpu $end
$scope module mem_data $end
$var reg 32 _ \data_mem[3] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b110010011 _
bx ^
z]
b1011 \
b10 [
b1 Z
bx Y
bx X
b100 W
b111 V
b0 U
b111 T
b0 S
b0 R
b0 Q
b100010010111011 P
bx O
bx N
b100 M
b100010010111011 L
b0 K
b1011 J
b1 I
b10 H
b1011 G
b0 F
b0 E
0D
0C
0B
b1011 A
b0 @
b111 ?
b100 >
b0 =
b0 <
b111 ;
b100 :
bx 9
b100 8
07
b0 6
b0 5
04
b0 3
b111 2
b100 1
bx 0
b100010010111011 /
0.
0-
0,
bx +
b0 *
b1011 )
1(
b0 '
b1 &
b10 %
b1011 $
0#
0"
0!
$end
#5000
bx 8
bx M
bx 2
bx ;
bx ?
bx T
bx V
bx 1
bx :
bx >
bx W
x#
x(
bx *
bx K
bx R
bx &
bx I
bx Z
bx %
bx H
bx [
bx $
bx G
bx \
x-
x7
x.
xC
xB
xD
x,
bx )
bx A
bx J
bx /
bx L
bx P
b1111111111111111111111110000 '
b1111111111111111111111110000 Q
b1111111111111111111111110000 S
b1111111111111111111111110000 U
1!
#10000
0!
#15000
b1111111111111111111111110100 '
b1111111111111111111111110100 Q
b1111111111111111111111110100 S
b1111111111111111111111110100 U
1!
#20000
0!
#25000
b1111111111111111111111111000 '
b1111111111111111111111111000 Q
b1111111111111111111111111000 S
b1111111111111111111111111000 U
1!
#30000
0!
#35000
b1111111111111111111111111100 '
b1111111111111111111111111100 Q
b1111111111111111111111111100 S
b1111111111111111111111111100 U
1!
#40000
0!
#45000
b100 8
b100 M
b111 2
b111 ;
b111 ?
b111 T
b111 V
b100 1
b100 :
b100 >
b100 W
0#
1(
b0 *
b0 K
b0 R
b1 &
b1 I
b1 Z
b10 %
b10 H
b10 [
b1011 $
b1011 G
b1011 \
0-
07
0.
0C
0B
0D
0,
b1011 )
b1011 A
b1011 J
b100010010111011 /
b100010010111011 L
b100010010111011 P
b10000000000000000000000000000 '
b10000000000000000000000000000 Q
b10000000000000000000000000000 S
b10000000000000000000000000000 U
1!
#50000
0!
#55000
bx 8
bx M
bx 2
bx ;
bx ?
bx T
bx V
bx 1
bx :
bx >
bx W
x#
x(
bx *
bx K
bx R
bx &
bx I
bx Z
bx %
bx H
bx [
bx $
bx G
bx \
x-
x7
x.
xC
xB
xD
x,
bx )
bx A
bx J
bx /
bx L
bx P
b1111111111111111111111110000 '
b1111111111111111111111110000 Q
b1111111111111111111111110000 S
b1111111111111111111111110000 U
1!
#60000
0!
#65000
b1111111111111111111111110100 '
b1111111111111111111111110100 Q
b1111111111111111111111110100 S
b1111111111111111111111110100 U
1!
#70000
0!
#75000
b1111111111111111111111111000 '
b1111111111111111111111111000 Q
b1111111111111111111111111000 S
b1111111111111111111111111000 U
1!
#80000
0!
#85000
b1111111111111111111111111100 '
b1111111111111111111111111100 Q
b1111111111111111111111111100 S
b1111111111111111111111111100 U
1!
#90000
0!
#95000
b100 8
b100 M
b111 2
b111 ;
b111 ?
b111 T
b111 V
b100 1
b100 :
b100 >
b100 W
0#
1(
b0 *
b0 K
b0 R
b1 &
b1 I
b1 Z
b10 %
b10 H
b10 [
b1011 $
b1011 G
b1011 \
0-
07
0.
0C
0B
0D
0,
b1011 )
b1011 A
b1011 J
b100010010111011 /
b100010010111011 L
b100010010111011 P
b10000000000000000000000000000 '
b10000000000000000000000000000 Q
b10000000000000000000000000000 S
b10000000000000000000000000000 U
1!
#100000
0!
#105000
bx 8
bx M
bx 2
bx ;
bx ?
bx T
bx V
bx 1
bx :
bx >
bx W
x#
x(
bx *
bx K
bx R
bx &
bx I
bx Z
bx %
bx H
bx [
bx $
bx G
bx \
x-
x7
x.
xC
xB
xD
x,
bx )
bx A
bx J
bx /
bx L
bx P
b1111111111111111111111110000 '
b1111111111111111111111110000 Q
b1111111111111111111111110000 S
b1111111111111111111111110000 U
1!
#110000
0!
#115000
b1111111111111111111111110100 '
b1111111111111111111111110100 Q
b1111111111111111111111110100 S
b1111111111111111111111110100 U
1!
#120000
0!
#125000
b1111111111111111111111111000 '
b1111111111111111111111111000 Q
b1111111111111111111111111000 S
b1111111111111111111111111000 U
1!
#130000
0!
#135000
b1111111111111111111111111100 '
b1111111111111111111111111100 Q
b1111111111111111111111111100 S
b1111111111111111111111111100 U
1!
#140000
0!
#145000
b100 8
b100 M
b111 2
b111 ;
b111 ?
b111 T
b111 V
b100 1
b100 :
b100 >
b100 W
0#
1(
b0 *
b0 K
b0 R
b1 &
b1 I
b1 Z
b10 %
b10 H
b10 [
b1011 $
b1011 G
b1011 \
0-
07
0.
0C
0B
0D
0,
b1011 )
b1011 A
b1011 J
b100010010111011 /
b100010010111011 L
b100010010111011 P
b10000000000000000000000000000 '
b10000000000000000000000000000 Q
b10000000000000000000000000000 S
b10000000000000000000000000000 U
1!
#150000
0!
#155000
bx 8
bx M
bx 2
bx ;
bx ?
bx T
bx V
bx 1
bx :
bx >
bx W
x#
x(
bx *
bx K
bx R
bx &
bx I
bx Z
bx %
bx H
bx [
bx $
bx G
bx \
x-
x7
x.
xC
xB
xD
x,
bx )
bx A
bx J
bx /
bx L
bx P
b1111111111111111111111110000 '
b1111111111111111111111110000 Q
b1111111111111111111111110000 S
b1111111111111111111111110000 U
1!
#160000
0!
#165000
b1111111111111111111111110100 '
b1111111111111111111111110100 Q
b1111111111111111111111110100 S
b1111111111111111111111110100 U
1!
#170000
0!
#175000
b1111111111111111111111111000 '
b1111111111111111111111111000 Q
b1111111111111111111111111000 S
b1111111111111111111111111000 U
1!
#180000
0!
#185000
b1111111111111111111111111100 '
b1111111111111111111111111100 Q
b1111111111111111111111111100 S
b1111111111111111111111111100 U
1!
#190000
0!
#195000
b100 8
b100 M
b111 2
b111 ;
b111 ?
b111 T
b111 V
b100 1
b100 :
b100 >
b100 W
0#
1(
b0 *
b0 K
b0 R
b1 &
b1 I
b1 Z
b10 %
b10 H
b10 [
b1011 $
b1011 G
b1011 \
0-
07
0.
0C
0B
0D
0,
b1011 )
b1011 A
b1011 J
b100010010111011 /
b100010010111011 L
b100010010111011 P
b10000000000000000000000000000 '
b10000000000000000000000000000 Q
b10000000000000000000000000000 S
b10000000000000000000000000000 U
1!
#200000
0!
#205000
bx 8
bx M
bx 2
bx ;
bx ?
bx T
bx V
bx 1
bx :
bx >
bx W
x#
x(
bx *
bx K
bx R
bx &
bx I
bx Z
bx %
bx H
bx [
bx $
bx G
bx \
x-
x7
x.
xC
xB
xD
x,
bx )
bx A
bx J
bx /
bx L
bx P
b1111111111111111111111110000 '
b1111111111111111111111110000 Q
b1111111111111111111111110000 S
b1111111111111111111111110000 U
1!
#210000
0!
#215000
b1111111111111111111111110100 '
b1111111111111111111111110100 Q
b1111111111111111111111110100 S
b1111111111111111111111110100 U
1!
#220000
0!
#225000
b1111111111111111111111111000 '
b1111111111111111111111111000 Q
b1111111111111111111111111000 S
b1111111111111111111111111000 U
1!
#230000
0!
#235000
b1111111111111111111111111100 '
b1111111111111111111111111100 Q
b1111111111111111111111111100 S
b1111111111111111111111111100 U
1!
#240000
0!
#245000
b100 8
b100 M
b111 2
b111 ;
b111 ?
b111 T
b111 V
b100 1
b100 :
b100 >
b100 W
0#
1(
b0 *
b0 K
b0 R
b1 &
b1 I
b1 Z
b10 %
b10 H
b10 [
b1011 $
b1011 G
b1011 \
0-
07
0.
0C
0B
0D
0,
b1011 )
b1011 A
b1011 J
b100010010111011 /
b100010010111011 L
b100010010111011 P
b10000000000000000000000000000 '
b10000000000000000000000000000 Q
b10000000000000000000000000000 S
b10000000000000000000000000000 U
1!
#250000
0!
#255000
bx 8
bx M
bx 2
bx ;
bx ?
bx T
bx V
bx 1
bx :
bx >
bx W
x#
x(
bx *
bx K
bx R
bx &
bx I
bx Z
bx %
bx H
bx [
bx $
bx G
bx \
x-
x7
x.
xC
xB
xD
x,
bx )
bx A
bx J
bx /
bx L
bx P
b1111111111111111111111110000 '
b1111111111111111111111110000 Q
b1111111111111111111111110000 S
b1111111111111111111111110000 U
1!
#260000
0!
#265000
b1111111111111111111111110100 '
b1111111111111111111111110100 Q
b1111111111111111111111110100 S
b1111111111111111111111110100 U
1!
#270000
0!
#275000
b1111111111111111111111111000 '
b1111111111111111111111111000 Q
b1111111111111111111111111000 S
b1111111111111111111111111000 U
1!
#280000
0!
#285000
b1111111111111111111111111100 '
b1111111111111111111111111100 Q
b1111111111111111111111111100 S
b1111111111111111111111111100 U
1!
#290000
0!
#295000
b100 8
b100 M
b111 2
b111 ;
b111 ?
b111 T
b111 V
b100 1
b100 :
b100 >
b100 W
0#
1(
b0 *
b0 K
b0 R
b1 &
b1 I
b1 Z
b10 %
b10 H
b10 [
b1011 $
b1011 G
b1011 \
0-
07
0.
0C
0B
0D
0,
b1011 )
b1011 A
b1011 J
b100010010111011 /
b100010010111011 L
b100010010111011 P
b10000000000000000000000000000 '
b10000000000000000000000000000 Q
b10000000000000000000000000000 S
b10000000000000000000000000000 U
1!
#300000
0!
#305000
bx 8
bx M
bx 2
bx ;
bx ?
bx T
bx V
bx 1
bx :
bx >
bx W
x#
x(
bx *
bx K
bx R
bx &
bx I
bx Z
bx %
bx H
bx [
bx $
bx G
bx \
x-
x7
x.
xC
xB
xD
x,
bx )
bx A
bx J
bx /
bx L
bx P
b1111111111111111111111110000 '
b1111111111111111111111110000 Q
b1111111111111111111111110000 S
b1111111111111111111111110000 U
1!
#310000
0!
#315000
b1111111111111111111111110100 '
b1111111111111111111111110100 Q
b1111111111111111111111110100 S
b1111111111111111111111110100 U
1!
#320000
0!
#325000
b1111111111111111111111111000 '
b1111111111111111111111111000 Q
b1111111111111111111111111000 S
b1111111111111111111111111000 U
1!
#330000
0!
#335000
b1111111111111111111111111100 '
b1111111111111111111111111100 Q
b1111111111111111111111111100 S
b1111111111111111111111111100 U
1!
